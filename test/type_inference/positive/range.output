trait Iterator {
    fn inc(self: Self) -> Self;
    fn lt(self: Self, other: Self) -> bool;
}

impl Iterator for i32 {
    fn inc(self: i32) -> i32 {
        (self + 1)
    }
    fn lt(self: i32, other: i32) -> bool {
        (self < other)
    }
}

fn range[I: Iterator](a: I, b: I, body: fn(I) -> ()) -> () {
    if ((a.lt)(b)) {
        (body(a));
        (range[I](((a.inc)()), b, body))
    } else {
        (return())
    }
}

fn main() -> () {
    (range[i32](0, 10, |i: i32| -> () {
    }));
}
