// codegen broken

trait Iterator {
    fn inc(self: Self) -> Self;
    fn lt(self: Self, other: Self) -> bool;
}

impl Iterator for int {
    fn inc(self: int) -> int { self + 1 }
    fn lt(self: int, other: int) -> bool { self < other }
}

fn range[I: Iterator](a: I, b: I, body: fn(I)->()) -> () {
    if (a.lt(b)) {
        body(a);
        range(a.inc(), b, body)
    } else {
        return()
    }
}

fn main() -> int {
    let mut sum = 0;
    for i in range(0, 10) {
        sum += i
    }
    if sum == 45 { 0 } else { 1 }
}
