// codegen broken

// TODO this example is not semantically correct because method overloading is prohibited! (=>int cannot implement A and B together)

trait B {
    fn a(self: Self) -> f32;
}

trait A {
    fn a(self: Self) -> int;
    fn b(self: Self) -> bool;
}

impl A for int {
    fn a(self: int) -> int { 42 }
    fn b(self: int) -> bool { true }
}

impl B for int {
    fn a(self: int) -> f32 { 23.f }
}

fn f[T: A + B, U: A](a: T, b: U) -> int {
    f(a, b)
}

fn main() -> int {
    if f(23, 42) == 0 { 0 } else { 1 }
}
