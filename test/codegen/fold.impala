// codegen broken

fn seq(a: int, b: int) -> (int, fn(int, fn(int) -> ()) -> ()) {
    fn stream(i: int, body: fn(int) -> ()) -> () {
        if (i <= b) {
            body(i, || -> ! { stream(i+1, body, return) })
        } else {
            return()
        }
    }
    (a, stream)
}

fn fold(f: fn(int, int) -> int, z: int, stream: (int, fn(int, fn(int) -> ()) -> ())) -> int {
    let mut res = z;
    let a = stream(0);
    let s = stream(1);
    let ret = return;
    s(a, |i: int| -> () {
            res = f(res, i);
            return()
        }, || -> ! { ret(res) })
}

fn main() -> int {
    if fold(|a: int, b: int| -> int { a + b }, 0, seq(0, 10)) == 55 { 0 } else { 1 }
}
