fn mask_store(i: simd[bool * 4], src: simd[int * 4], mut dst: &simd[int * 4]) -> () {
    if i(0) { dst(0) = src(0) }
    if i(1) { dst(1) = src(1) }
    if i(2) { dst(2) = src(2) }
    if i(3) { dst(3) = src(3) }
}

fn main() -> bool {
    let mask = simd[true, false, true, false];
    let mut v = simd[1, 2, 3, 4];
    let w = simd[4, 5, 6, 7];
    mask_store(mask, w, &v);
    v(0) + v(1) + v(2) + v(3) == 16}
