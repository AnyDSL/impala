// codegen broken

fn generic_while[L, B](l : L,
                          head : fn(L) -> (B, bool),
                          body : fn(B) -> L) -> B
{
    head(l,
        |b : B, cond : bool| -> ! {
            if (cond) {
                generic_while(body(b), head, body)
            } else {
                return(b)
            }
        }
    )
}

fn main() -> int {
    if generic_while(/*counter*/ 0,
                    |i : int| -> (int, bool) { return(i, i < 42) },
                    |i : int| -> int { i + 1 }) == 42 {
        0 
    } else {
        1
    }
}
