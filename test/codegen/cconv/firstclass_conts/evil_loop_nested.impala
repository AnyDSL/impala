
fn bad(ret:fn()->!) -> ! {
    *(42 as &mut fn()->!) = ret;
    ret()
}

extern fn f(n : i32) -> () {
    let mut i = 0;
    let f_ret = return;
    fn bad() -> () {
        *(42 as &mut fn()->!) = f_ret;
        f_ret()
    }
    while i < n {
        if (i % 42 == 0) {
            bad()
        }
        i++;
    }
}
